{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\damie\\\\Documents\\\\EzDelivery\\\\Mobile\\\\components\\\\Livraisons.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { server } from \"../constante\";\nimport axios from 'axios';\nimport { ListItem } from 'react-native-elements';\nimport { Appbar, IconButton } from 'react-native-paper';\n\nvar LivraisonsScreen = function (_React$Component) {\n  _inherits(LivraisonsScreen, _React$Component);\n\n  var _super = _createSuper(LivraisonsScreen);\n\n  function LivraisonsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LivraisonsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.addLivraison = function () {\n      console.log('add');\n    };\n\n    _this.setModalVisible = function () {\n      _this.setState({\n        modalVisible: true\n      });\n\n      console.log(1);\n    };\n\n    _this.delLivraison = function _callee(id) {\n      var res, res2;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.delete(server + '/api/livraisons/' + id));\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.data) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(axios.get(server + '/api/livraisons/mail/' + _this.state.mail));\n\n            case 6:\n              res2 = _context.sent;\n\n              _this.setState({\n                tabLiv: res2.data\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.findBoite = function (num) {\n      for (var i = 0; i < _this.state.tabBoites.length; i++) {\n        if (num == _this.state.tabBoites[i].boite) {\n          return _this.state.tabBoites[i].nom;\n        }\n      }\n    };\n\n    _this.state = {\n      mail: 'damiendelestienne4@gmail.com',\n      tabLiv: [],\n      tabBoites: [],\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(LivraisonsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(server + '/api/livraisons/mail/' + this.state.mail).then(function (res) {\n        _this2.setState({\n          tabLiv: res.data\n        });\n      });\n      axios.get(server + '/api/acces/' + this.state.mail).then(function (res) {\n        _this2.setState({\n          tabBoites: res.data\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, React.createElement(Appbar.Header, {\n        style: {\n          backgroundColor: '#c0dfef'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(Appbar.Content, {\n        title: \"Livraisons\",\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }), React.createElement(Appbar.Action, {\n        icon: \"plus\",\n        onPress: this.setModalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      })), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.modalVisible,\n        backdropColor: \"rgba(0,0,0,0.5)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 26\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.modalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, \"Hello World!\")))), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, this.state.tabLiv.map(function (l, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          bottomDivider: true,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }\n        }, React.createElement(ListItem.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }\n        }, React.createElement(ListItem.Title, {\n          style: {\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }\n        }, l.nom), React.createElement(ListItem.Subtitle, {\n          style: {\n            marginTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 79\n          }\n        }, \"Num\\xE9ro de colis: \", l.numcolis)), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 56\n          }\n        }, \"Pass\\xE9e le: \", new Date(l.datedebut).toLocaleDateString())), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 45\n          }\n        }, \"Statut: \", l.datefin == null ? React.createElement(Text, {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 78\n          }\n        }, \"Non livr\\xE9\") : React.createElement(Text, {\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 125\n          }\n        }, \"Livr\\xE9 le: \", new Date(l.datefin).toLocaleDateString()))), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 56\n          }\n        }, \"Boites aux lettres: \", _this3.findBoite(l.boite)))), React.createElement(IconButton, {\n          icon: \"delete\",\n          color: \"#226557\",\n          size: 30,\n          onPress: function onPress() {\n            return _this3.delLivraison(l.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return LivraisonsScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"black\"\n  },\n  modalView: {\n    margin: 120,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.35,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default LivraisonsScreen;","map":{"version":3,"sources":["C:/Users/damie/Documents/EzDelivery/Mobile/components/Livraisons.js"],"names":["React","useState","server","axios","ListItem","Appbar","IconButton","LivraisonsScreen","props","addLivraison","console","log","setModalVisible","setState","modalVisible","delLivraison","id","delete","res","data","get","state","mail","res2","tabLiv","findBoite","num","i","tabBoites","length","boite","nom","then","_isMounted","styles","container","backgroundColor","alignItems","centeredView","modalView","modalText","map","l","width","fontSize","marginTop","numcolis","Date","datedebut","toLocaleDateString","datefin","color","Component","StyleSheet","create","margin","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginBottom","textAlign"],"mappings":"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","sourcesContent":[" \nimport React, {useState} from 'react';  \nimport { StyleSheet, Text, View,Modal } from \"react-native\";\nimport {server} from '../constante';\nimport axios from 'axios';\nimport { ListItem} from 'react-native-elements';\nimport { Appbar, IconButton} from 'react-native-paper';\n\n \nclass LivraisonsScreen extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            mail:'damiendelestienne4@gmail.com',\n            tabLiv:[],\n            tabBoites:[],\n            modalVisible: false\n        }\n    }\n    addLivraison = () =>{\n        console.log('add');\n    }\n    setModalVisible = () => {\n        this.setState({ modalVisible: true });\n        console.log(1);\n    }\n    delLivraison =async (id) =>{\n        let res =await axios.delete(server+'/api/livraisons/'+id);\n        if(res.data){\n            let res2= await axios.get(server+'/api/livraisons/mail/'+this.state.mail);\n            this.setState({tabLiv:res2.data});\n        }\n    }\n    findBoite = (num) =>{\n        for(let i=0;i<this.state.tabBoites.length;i++){\n            if(num==this.state.tabBoites[i].boite){\n                return this.state.tabBoites[i].nom;\n            }\n        }\n    }\n    componentDidMount(){\n        axios.get(server+'/api/livraisons/mail/'+this.state.mail)\n        .then( res => {\n\n            this.setState({tabLiv:res.data});\n        })\n        axios.get(server+'/api/acces/'+this.state.mail)\n        .then( res => {\n            this.setState({tabBoites:res.data});\n        })\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render(){\n        return (  \n            <View style={styles.container}>\n                <Appbar.Header  style={{backgroundColor:'#c0dfef'}}>\n                    \n                    <Appbar.Content title=\"Livraisons\"  style={{alignItems:'center'}}/>\n                    <Appbar.Action icon=\"plus\" onPress={this.setModalVisible} />\n\n                </Appbar.Header>\n                <Modal\n                            animationType=\"slide\"\n                            transparent={true}\n                            visible={this.state.modalVisible}\n                            backdropColor=\"rgba(0,0,0,0.5)\"\n                    >\n                         <View style={styles.centeredView}>\n                            <View style={styles.modalView}>\n                                    <Text style={styles.modalText}>Hello World!</Text>\n                                    </View>\n                                    </View>\n                        </Modal>\n\n                <View>       \n                     {\n                            this.state.tabLiv.map((l, i) => (\n                            <ListItem key={i} bottomDivider style={{width:\"100%\"}}>\n                                <ListItem.Content>\n                                    <ListItem.Title style={{fontSize:30}}>{l.nom}</ListItem.Title>\n                                    <ListItem.Subtitle style={{marginTop:10}}><Text>Numéro de colis: {l.numcolis}</Text></ListItem.Subtitle>\n                                    <ListItem.Subtitle><Text>Passée le: {new Date(l.datedebut).toLocaleDateString()}</Text></ListItem.Subtitle>\n                                    <ListItem.Subtitle>\n                                            <Text>Statut: {l.datefin==null ? <Text style={{color:'red'}}>Non livré</Text> : <Text style={{color:'green'}}>Livré le: {new Date(l.datefin).toLocaleDateString()}</Text>}</Text>\n                                    </ListItem.Subtitle>\n                                    <ListItem.Subtitle><Text>Boites aux lettres: {this.findBoite(l.boite)}</Text></ListItem.Subtitle>\n                                </ListItem.Content>\n                                <IconButton\n                                                icon=\"delete\"\n                                                color='#226557'\n                                                size={30}\n                                                onPress={() => this.delLivraison(l.id)}\n                                />\n                            </ListItem>\n                            ))\n                    }\n                </View> \n            </View>\n            );  \n    }\n}\n\nconst styles = StyleSheet.create({  \n    container: {  \n        backgroundColor:\"black\"\n    }, modalView: {\n        margin: 120,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.35,\n        shadowRadius: 4,\n        elevation: 5\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n    });\n\nexport default LivraisonsScreen;\n\n\n"]},"metadata":{},"sourceType":"module"}