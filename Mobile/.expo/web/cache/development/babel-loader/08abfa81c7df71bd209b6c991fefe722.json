{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\damie\\\\Documents\\\\EzDelivery\\\\Mobile\\\\components\\\\Livraisons.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { server } from \"../constante\";\nimport axios from 'axios';\nimport { ListItem } from 'react-native-elements';\n\nvar LivraisonsScreen = function (_React$Component) {\n  _inherits(LivraisonsScreen, _React$Component);\n\n  var _super = _createSuper(LivraisonsScreen);\n\n  function LivraisonsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LivraisonsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.findBoite = function (num) {\n      for (var i = 0; i < _this.state.tabBoites.length; i++) {\n        if (num == _this.state.tabBoites[i].boite) {\n          return _this.state.tabBoites[i].nom;\n        }\n      }\n    };\n\n    _this.state = {\n      mail: 'damiendelestienne4@gmail.com',\n      tabLiv: [],\n      tabBoites: []\n    };\n    return _this;\n  }\n\n  _createClass(LivraisonsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(server + '/api/livraisons/mail/' + this.state.mail).then(function (res) {\n        _this2.setState({\n          tabLiv: res.data\n        });\n      });\n      axios.get(server + '/api/acces/' + this.state.mail).then(function (res) {\n        _this2.setState({\n          tabBoites: res.data\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          width: \"100%\",\n          backgroundColor: '#c0dfef'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          display: 'inline-block',\n          width: '70%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#226557',\n          marginLeft: '63%',\n          fontSize: '15'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, \"Livraisons\")), React.createElement(View, {\n        style: {\n          display: 'inline-block',\n          width: '30%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, this.state.tabLiv.map(function (l, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          bottomDivider: true,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, React.createElement(ListItem.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }\n        }, React.createElement(ListItem.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        }, l.nom), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 56\n          }\n        }, \"Num\\xE9ro de colis: \", l.numcolis)), React.createElement(ListItem.Subtitle, {\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 45\n          }\n        }, \"Pass\\xE9e le: \", new Date(l.datedebut).toLocaleDateString())), React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 45\n          }\n        }, \"Statut: \", l.datefin == null ? React.createElement(Text, {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 78\n          }\n        }, \"Non livr\\xE9\") : React.createElement(Text, {\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 125\n          }\n        }, \"Livr\\xE9 le: \", new Date(l.datefin).toLocaleDateString())))), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 56\n          }\n        }, \"Boites aux lettres: \", _this3.findBoite(l.boite)))));\n      })));\n    }\n  }]);\n\n  return LivraisonsScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n});\nexport default LivraisonsScreen;","map":{"version":3,"sources":["C:/Users/damie/Documents/EzDelivery/Mobile/components/Livraisons.js"],"names":["React","useState","server","axios","ListItem","LivraisonsScreen","props","findBoite","num","i","state","tabBoites","length","boite","nom","mail","tabLiv","get","then","res","setState","data","_isMounted","width","backgroundColor","display","color","marginLeft","fontSize","styles","container","map","l","numcolis","Date","datedebut","toLocaleDateString","datefin","Component","StyleSheet","create","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":[" \nimport React, {useState} from 'react';  \nimport {StyleSheet, Text, View} from 'react-native';\nimport {server} from '../constante';\nimport axios from 'axios';\nimport { ListItem} from 'react-native-elements';\n \nclass LivraisonsScreen extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            mail:'damiendelestienne4@gmail.com',\n            tabLiv:[],\n            tabBoites:[]\n        }\n    }\n    findBoite = (num) =>{\n        for(let i=0;i<this.state.tabBoites.length;i++){\n            if(num==this.state.tabBoites[i].boite){\n                return this.state.tabBoites[i].nom;\n            }\n        }\n    }\n    componentDidMount(){\n        axios.get(server+'/api/livraisons/mail/'+this.state.mail)\n        .then( res => {\n\n            this.setState({tabLiv:res.data});\n        })\n        axios.get(server+'/api/acces/'+this.state.mail)\n        .then( res => {\n            this.setState({tabBoites:res.data});\n        })\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    render(){\n        return (  \n            <View>\n                <View style={{width:\"100%\",backgroundColor:'#c0dfef'}}>\n                    <View style={{display:'inline-block',width:'70%'}}>\n                        <Text style={{color:'#226557',marginLeft: '63%',fontSize:'15'}}>Livraisons</Text>\n                    </View>\n                    <View style={{display:'inline-block',width:'30%'}}>\n                    </View>\n                </View>\n                <View style={styles.container}>       \n                     {\n                            this.state.tabLiv.map((l, i) => (\n                            <ListItem key={i} bottomDivider style={{width:\"100%\"}}>\n                                <ListItem.Content>\n                                    <ListItem.Title>{l.nom}</ListItem.Title>\n                                    <ListItem.Subtitle><Text>Numéro de colis: {l.numcolis}</Text></ListItem.Subtitle>\n                                    <ListItem.Subtitle style={{width:\"100%\"}}>\n                                        <View style={{display:'inline-block',width:'50%'}}>\n                                            <Text>Passée le: {new Date(l.datedebut).toLocaleDateString()}</Text>\n                                        </View>\n                                        <View style={{display:'inline-block', width:'50%'}}>\n                                            <Text>Statut: {l.datefin==null ? <Text style={{color:'red'}}>Non livré</Text> : <Text style={{color:'green'}}>Livré le: {new Date(l.datefin).toLocaleDateString()}</Text>}</Text>\n                                        </View>\n                                    </ListItem.Subtitle>\n                                    <ListItem.Subtitle><Text>Boites aux lettres: {this.findBoite(l.boite)}</Text></ListItem.Subtitle>\n                                </ListItem.Content>\n                            </ListItem>\n                            ))\n                    }\n                </View>  \n            </View>\n            );  \n    }\n}\n\nconst styles = StyleSheet.create({  \n    container: {  \n        flex: 1,  \n         flexDirection: 'column', \n        alignItems: 'center'  \n    },  \n});  \n\nexport default LivraisonsScreen;\n\n\n"]},"metadata":{},"sourceType":"module"}