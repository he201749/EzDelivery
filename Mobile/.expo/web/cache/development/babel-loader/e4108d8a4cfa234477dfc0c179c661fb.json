{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\damie\\\\Documents\\\\EzDelivery\\\\Mobile\\\\components\\\\Livraisons.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Pressable } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { server } from \"../constante\";\nimport axios from 'axios';\nimport { ListItem } from 'react-native-elements';\nimport { Appbar, IconButton, Colors } from 'react-native-paper';\n\nvar LivraisonsScreen = function (_React$Component) {\n  _inherits(LivraisonsScreen, _React$Component);\n\n  var _super = _createSuper(LivraisonsScreen);\n\n  function LivraisonsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LivraisonsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.addLivraison = function () {\n      console.log('add');\n    };\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    _this.delLivraison = function (id) {\n      _this.setState({\n        modalDeleteVisible: true\n      });\n\n      console.log(1);\n    };\n\n    _this.findBoite = function (num) {\n      for (var i = 0; i < _this.state.tabBoites.length; i++) {\n        if (num == _this.state.tabBoites[i].boite) {\n          return _this.state.tabBoites[i].nom;\n        }\n      }\n    };\n\n    _this.state = {\n      mail: 'damiendelestienne4@gmail.com',\n      tabLiv: [],\n      tabBoites: [],\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(LivraisonsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(server + '/api/livraisons/mail/' + this.state.mail).then(function (res) {\n        _this2.setState({\n          tabLiv: res.data\n        });\n      });\n      axios.get(server + '/api/acces/' + this.state.mail).then(function (res) {\n        _this2.setState({\n          tabBoites: res.data\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var modalVisible = this.state.modalVisible;\n      return React.createElement(View, {\n        style: styles.centeredView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.centeredView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.modalText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \"Hello World!\"), React.createElement(Pressable, {\n        style: [styles.button, styles.buttonClose],\n        onPress: function onPress() {\n          return _this3.setModalVisible(!modalVisible);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"Hide Modal\"))))), React.createElement(Pressable, {\n        style: [styles.button, styles.buttonOpen],\n        onPress: function onPress() {\n          return _this3.setModalVisible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, \"Show Modal\")), React.createElement(Appbar.Header, {\n        style: {\n          backgroundColor: '#c0dfef'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, React.createElement(Appbar.Content, {\n        title: \"Livraisons\",\n        style: {\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }), React.createElement(Appbar.Action, {\n        icon: \"plus\",\n        onPress: this.addLivraison,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, this.state.tabLiv.map(function (l, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          bottomDivider: true,\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }\n        }, React.createElement(ListItem.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }\n        }, React.createElement(ListItem.Title, {\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '90%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 45\n          }\n        }, l.nom)), React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '10%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 41\n          }\n        }, React.createElement(IconButton, {\n          icon: \"delete\",\n          color: \"#226557\",\n          size: 30,\n          onPress: function onPress() {\n            return _this3.delLivraison(l.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 45\n          }\n        }))), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 56\n          }\n        }, \"Num\\xE9ro de colis: \", l.numcolis)), React.createElement(ListItem.Subtitle, {\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 45\n          }\n        }, \"Pass\\xE9e le: \", new Date(l.datedebut).toLocaleDateString())), React.createElement(View, {\n          style: {\n            display: 'inline-block',\n            width: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 45\n          }\n        }, \"Statut: \", l.datefin == null ? React.createElement(Text, {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 78\n          }\n        }, \"Non livr\\xE9\") : React.createElement(Text, {\n          style: {\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 125\n          }\n        }, \"Livr\\xE9 le: \", new Date(l.datefin).toLocaleDateString())))), React.createElement(ListItem.Subtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 56\n          }\n        }, \"Boites aux lettres: \", _this3.findBoite(l.boite)))));\n      })));\n    }\n  }]);\n\n  return LivraisonsScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default LivraisonsScreen;","map":{"version":3,"sources":["C:/Users/damie/Documents/EzDelivery/Mobile/components/Livraisons.js"],"names":["React","useState","Pressable","server","axios","ListItem","Appbar","IconButton","Colors","LivraisonsScreen","props","addLivraison","console","log","setModalVisible","visible","setState","modalVisible","delLivraison","id","modalDeleteVisible","findBoite","num","i","state","tabBoites","length","boite","nom","mail","tabLiv","get","then","res","data","_isMounted","styles","centeredView","modalView","modalText","button","buttonClose","textStyle","buttonOpen","backgroundColor","alignItems","container","map","l","width","display","numcolis","Date","datedebut","toLocaleDateString","datefin","color","Component","StyleSheet","create","flex","flexDirection","margin","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":[" \nimport React, {useState} from 'react';  \nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\nimport {server} from '../constante';\nimport axios from 'axios';\nimport { ListItem} from 'react-native-elements';\nimport { Appbar, IconButton, Colors } from 'react-native-paper';\n\n \nclass LivraisonsScreen extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            mail:'damiendelestienne4@gmail.com',\n            tabLiv:[],\n            tabBoites:[],\n            modalVisible: false\n        }\n    }\n    addLivraison = () =>{\n        console.log('add');\n    }\n    setModalVisible = (visible) => {\n        this.setState({ modalVisible: visible });\n      }\n    delLivraison = (id) =>{\n        this.setState({modalDeleteVisible:true});\n        console.log(1)\n    }\n    findBoite = (num) =>{\n        for(let i=0;i<this.state.tabBoites.length;i++){\n            if(num==this.state.tabBoites[i].boite){\n                return this.state.tabBoites[i].nom;\n            }\n        }\n    }\n    componentDidMount(){\n        axios.get(server+'/api/livraisons/mail/'+this.state.mail)\n        .then( res => {\n\n            this.setState({tabLiv:res.data});\n        })\n        axios.get(server+'/api/acces/'+this.state.mail)\n        .then( res => {\n            this.setState({tabBoites:res.data});\n        })\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render(){\n        const { modalVisible } = this.state;\n        return (  \n            <View style={styles.centeredView}>\n                        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n        >\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <Text style={styles.modalText}>Hello World!</Text>\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => this.setModalVisible(!modalVisible)}\n              >\n                <Text style={styles.textStyle}>Hide Modal</Text>\n              </Pressable>\n            </View>\n          </View>\n        </Modal>\n        <Pressable\n          style={[styles.button, styles.buttonOpen]}\n          onPress={() => this.setModalVisible(true)}\n        >\n          <Text style={styles.textStyle}>Show Modal</Text>\n        </Pressable>\n                <Appbar.Header  style={{backgroundColor:'#c0dfef'}}>\n                    \n                    <Appbar.Content title=\"Livraisons\"  style={{alignItems:'center'}}/>\n                    <Appbar.Action icon=\"plus\" onPress={this.addLivraison} />\n\n                </Appbar.Header>\n\n                <View style={styles.container}>       \n                     {\n                            this.state.tabLiv.map((l, i) => (\n                            <ListItem key={i} bottomDivider style={{width:\"100%\"}}>\n                                <ListItem.Content>\n                                    <ListItem.Title style={{width:\"100%\"}}>\n                                        <View style={{display:'inline-block',width:'90%'}}>\n                                            <Text>{l.nom}</Text>\n                                        </View>\n                                        <View style={{display:'inline-block', width:'10%'}}>\n                                            <IconButton\n                                                icon=\"delete\"\n                                                color='#226557'\n                                                size={30}\n                                                onPress={() => this.delLivraison(l.id)}\n                                        />\n                                        </View>\n                                    </ListItem.Title>\n                                    <ListItem.Subtitle><Text>Numéro de colis: {l.numcolis}</Text></ListItem.Subtitle>\n                                    <ListItem.Subtitle style={{width:\"100%\"}}>\n                                        <View style={{display:'inline-block',width:'50%'}}>\n                                            <Text>Passée le: {new Date(l.datedebut).toLocaleDateString()}</Text>\n                                        </View>\n                                        <View style={{display:'inline-block', width:'50%'}}>\n                                            <Text>Statut: {l.datefin==null ? <Text style={{color:'red'}}>Non livré</Text> : <Text style={{color:'green'}}>Livré le: {new Date(l.datefin).toLocaleDateString()}</Text>}</Text>\n                                        </View>\n                                    </ListItem.Subtitle>\n                                    <ListItem.Subtitle><Text>Boites aux lettres: {this.findBoite(l.boite)}</Text></ListItem.Subtitle>\n                                </ListItem.Content>\n                            </ListItem>\n                            ))\n                    }\n                </View> \n            </View>\n            );  \n    }\n}\n\nconst styles = StyleSheet.create({  \n    container: {  \n        flex: 1,  \n         flexDirection: 'column', \n        alignItems: 'center'  \n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n      },\n      button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      buttonOpen: {\n        backgroundColor: \"#F194FF\",\n      },\n      buttonClose: {\n        backgroundColor: \"#2196F3\",\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n    });\n    \nexport default LivraisonsScreen;\n\n\n"]},"metadata":{},"sourceType":"module"}